{"ast":null,"code":"var _jsxFileName = \"/home/empiric-18/Desktop/Blockchain Lottery/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isTron, setIsTron] = useState(null);\n  const [tronWeb, setTronWeb] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] = useState(null);\n  const [blockchainLotteryContract, setBlockchainLotteryContract] = useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null); // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n\n  const USDTAbi = usdtabi.abi; // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n\n  const tronWebConnect = async () => {\n    if (window.tronWeb) {\n      setTronWeb(window.tronWeb);\n      let _BlockchainLotteryAddress = \"TW7ocicVeZbCLq1WA5ijrwvk2PUvU2MLsD\";\n      const tronContract = await window.tronWeb.contract(blockchainlottery.abi).at(_Blockchain);\n      console.log(tronContract);\n      setBlockchainLotteryContract(tronContract);\n      setAmount((await tronContract.amount().call()).toNumber());\n      setIsTron(true);\n\n      let _tempUsdtAddress = await tronContract.USDTAddress().call();\n\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress);\n      const tempUSDTContract = await window.tronWeb.contract(usdtabi.abi).at(tempUsdtAddress);\n      setUsdtContract(tempUSDTContract);\n    }\n  };\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      let _BlockchainLotteryAddress;\n\n      let chainId = await window.ethereum.request({\n        method: \"net_version\"\n      });\n      console.log(chainId); //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n\n      if (chainId == 80001) {\n        _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n        setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n        setNetworkErr(null);\n      } else if (chainId == 97) {\n        _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n        setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n        setNetworkErr(null);\n      } else {\n        setNetworkErr(\"Change network to Polygon or BNB\");\n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      setAccounts(_accounts);\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n      const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n      setUsdtContract(tempUSDTContract);\n      let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    } else {\n      setNetworkErr(\"Please install Metamask\");\n    }\n\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      console.log(accounts);\n      connectWallet();\n    });\n    window.ethereum.on(\"chainChanged\", function (accounts) {\n      console.log(accounts);\n      connectWallet();\n    });\n  };\n\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\",\n        // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\",\n        // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\" // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n\n      } // bridge: 'https://bridge.walletconnect.org',\n\n    });\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const {\n      chainId\n    } = tempProvider.getNetwork();\n    console.log(\"chain id from Wallet Connect\" + chainId);\n\n    let _BlockchainLotteryAddress;\n\n    if (chainId == 80001) {\n      // Polygon\n      _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n      setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n      setNetworkErr(null);\n    } else if (chainId == 97) {\n      // BNB\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n    } else if (chainId == 43113) {\n      // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\");\n    }\n\n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n    const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n    let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    console.log(tempBlockchainLotteryContract);\n\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n\n    console.log(_isOn);\n    setIsOn(_isOn);\n\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n      console.log(_participants);\n\n      let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets); // eslint-disable-next-line\n\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    } // Subscribe to accounts change\n\n\n    provider.on(\"accountsChanged\", accounts => {\n      walletConnect();\n    }); // Subscribe to chainId change\n\n    provider.on(\"chainChanged\", chainId => {\n      walletConnect();\n    });\n  };\n\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected);\n    console.log(\"connect executed\"); // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress);\n\n    if (isTron) {\n      usdtContract.approve(BlockchainLotteryAddress, amount).send();\n    } else {\n      usdtContract.approve(BlockchainLotteryAddress, amount);\n    }\n  };\n\n  const depositeUSDT = async () => {\n    if (isTron) {\n      blockchainLotteryContract.depositeUSDT(amount).send();\n    } else {\n      blockchainLotteryContract.depositeUSDT(amount);\n    }\n  };\n\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      connectWallet: connectWallet,\n      walletConnect: walletConnect,\n      accounts: accounts,\n      usdtBalance: usdtBalance,\n      symbol: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tronWebConnect,\n      children: \"Connect tronWeb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      approve: approve,\n      depositeUSDT: depositeUSDT,\n      pricePool: pricePool,\n      ticketNumber: ticketNumber,\n      lastWinner: lastWinner,\n      getLottery: getLottery,\n      symbol: symbol,\n      isOn: isOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), networkErr ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: \"red\"\n      },\n      children: networkErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v8hsvQjcl2/+kR7Xe8GxFwHCJFw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","usdtabi","blockchainlottery","Navbar","Main","App","isTron","setIsTron","tronWeb","setTronWeb","accounts","setAccounts","ticketNumber","setTicketNumber","pricePool","setPricePool","usdtBalance","setUsdtBalance","lastWinner","setLastWinner","isOn","setIsOn","usdtContract","setUsdtContract","BlockchainLotteryAddress","setBlockchainLotteryAddress","blockchainLotteryContract","setBlockchainLotteryContract","networkErr","setNetworkErr","amount","setAmount","symbol","setSymbol","USDTAbi","abi","BlockchainLotteryAbi","tronWebConnect","window","_BlockchainLotteryAddress","tronContract","contract","at","_Blockchain","console","log","call","toNumber","_tempUsdtAddress","USDTAddress","tempUsdtAddress","address","fromHex","tempUSDTContract","connectWallet","ethereum","chainId","request","method","_accounts","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempBlockchainLotteryContract","Contract","tempAmount","tempdecimals","decimals","tempSymbol","tempPricePool","balanceOf","tempUSDTBalance","getAddress","_lastWinner","_isOn","_participants","getAllParticipants","_participantsTicket","addressAndTickets","alltickets","getAllTickets","indexOf","i","length","on","walletConnect","WalletConnectProvider","provider","default","rpc","connected","enable","getNetwork","approve","send","depositeUSDT","getLottery","textAlign","color"],"sources":["/home/empiric-18/Desktop/Blockchain Lottery/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nfunction App() {\n  const [isTron, setIsTron] = useState(null)\n  const [tronWeb, setTronWeb] = useState(null)\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] = useState(null)\n  const [blockchainLotteryContract, setBlockchainLotteryContract] = useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n\n  // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n  const USDTAbi = usdtabi.abi;\n  \n  // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n  const tronWebConnect = async () => {\n    if(window.tronWeb){\n      setTronWeb(window.tronWeb)\n      let _BlockchainLotteryAddress = \"TW7ocicVeZbCLq1WA5ijrwvk2PUvU2MLsD\"\n      const tronContract = await window.tronWeb.contract(blockchainlottery.abi).at(_Blockchain)\n      console.log(tronContract)\n      setBlockchainLotteryContract(tronContract)\n      setAmount((await tronContract.amount().call()).toNumber())\n      setIsTron(true)\n      let _tempUsdtAddress = await tronContract.USDTAddress().call()\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress)\n      const tempUSDTContract = await window.tronWeb.contract(usdtabi.abi).at(tempUsdtAddress)\n      setUsdtContract(tempUSDTContract)\n\n    }\n  }\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      let _BlockchainLotteryAddress;\n      let chainId = await window.ethereum.request({ method: \"net_version\" });\n      console.log(chainId);\n      //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n      if (chainId == 80001) {\n        _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\"\n        setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\")\n        setNetworkErr(null)\n      } else if(chainId == 97){\n        _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n        setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\")\n        setNetworkErr(null)\n      }else {\n        setNetworkErr(\"Change network to Polygon or BNB\")\n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAccounts(_accounts);\n\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(\n        _BlockchainLotteryAddress,\n        BlockchainLotteryAbi,\n        tempSigner\n      );\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n      // setUsdtAddress(USDTAddress)\n      const tempUSDTContract = new ethers.Contract(\n        USDTAddress,\n        USDTAbi,\n        tempSigner\n      );\n      setUsdtContract(tempUSDTContract);\n\n      let tempdecimals = await tempUSDTContract.decimals();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      );\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        tempSigner.getAddress()\n      );\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            await tempSigner.getAddress()\n          );\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    } else {\n      setNetworkErr(\"Please install Metamask\");\n    }\n\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      console.log(accounts)\n      connectWallet();\n    });\n\n    window.ethereum.on(\"chainChanged\", function (accounts) {\n      console.log(accounts)\n      connectWallet();\n    });\n  };\n\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\", // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\", // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\",\n        // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n      },\n      // bridge: 'https://bridge.walletconnect.org',\n    });\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const {chainId} = tempProvider.getNetwork()\n    console.log(\"chain id from Wallet Connect\"+chainId)\n    let _BlockchainLotteryAddress;\n    if (chainId == 80001) { // Polygon\n      _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\"\n      setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\")\n      setNetworkErr(null)\n    } else if(chainId == 97){ // BNB\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\")\n      setNetworkErr(null)\n    }else if(chainId == 43113){ // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\")\n      setNetworkErr(null)\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\")\n    }\n\n    \n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(\n      _BlockchainLotteryAddress,\n      BlockchainLotteryAbi,\n      tempSigner\n    );\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n    // setUsdtAddress(USDTAddress)\n    const tempUSDTContract = new ethers.Contract(\n      USDTAddress,\n      USDTAbi,\n      tempSigner\n    );\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals();\n    // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n\n    let tempPricePool = await tempUSDTContract.balanceOf(\n      _BlockchainLotteryAddress\n    );\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(\n      tempSigner.getAddress()\n    );\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n    console.log(tempBlockchainLotteryContract);\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n    console.log(_isOn);\n    setIsOn(_isOn);\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants =\n        await tempBlockchainLotteryContract.getAllParticipants();\n      console.log(_participants);\n\n      let _participantsTicket =\n        await tempBlockchainLotteryContract.addressAndTickets(\n          await tempSigner.getAddress()\n        );\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets);\n\n      // eslint-disable-next-line\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    }\n\n    // Subscribe to accounts change\n    provider.on(\"accountsChanged\", (accounts) => {\n      walletConnect()\n    });\n\n    // Subscribe to chainId change\n    provider.on(\"chainChanged\", (chainId) => {\n      walletConnect()\n    });\n  };\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected)\n    console.log(\"connect executed\");\n    // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress)\n    if(isTron){\n      usdtContract.approve(BlockchainLotteryAddress, amount).send()\n    }else{\n      usdtContract.approve(BlockchainLotteryAddress, amount);\n    }\n  };\n  const depositeUSDT = async () => {\n    if(isTron){\n      blockchainLotteryContract.depositeUSDT(amount).send()\n    }else{\n      blockchainLotteryContract.depositeUSDT(amount);\n    }\n  };\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        connectWallet={connectWallet}\n        walletConnect={walletConnect}\n        accounts={accounts}\n        usdtBalance={usdtBalance}\n        symbol={symbol}\n      />\n      <button onClick={tronWebConnect}>Connect tronWeb</button>\n      <Main\n        approve={approve}\n        depositeUSDT={depositeUSDT}\n        pricePool={pricePool}\n        ticketNumber={ticketNumber}\n        lastWinner={lastWinner}\n        getLottery={getLottery}\n        symbol={symbol}\n        isOn={isOn}\n      />\n      {networkErr ? (\n        <h1 style={{ textAlign: \"center\", color: \"red\" }}>{networkErr}</h1>\n      ) : null}\n      {/* <h1>Admin</h1>\n      <button onClick={setUsdtAddress}>Update USDT Address</button>\n      <button onClick={setFeeAccount}>set fee account</button>\n      <button onClick={getTime}>Get Time</button>\n      <button onClick={mint}>Mint Tokens</button>\n      <button onClick={getAllParticipants}>Get all participants</button>\n      <button onClick={setTimeDuration}>Set Time Duration</button>\n      <h1>User</h1>\n      <button onClick={connectWallet}>Connect Metamask</button>\n      <button onClick={approve}>Approve Tokens</button>\n      <button onClick={depositeUSDT}>Add money to lottery</button>\n      <button onClick={getLottery}>Get Lottery</button> \n      \n      #Lottery Contract Address (Mumbai Matic) \n      0xBDf8E38F99E60a839db7bf8CB779ECE832605bf2\n        \n      # Test Tether (Mumbai Matic)\n      0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\n        \n      \n      */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}