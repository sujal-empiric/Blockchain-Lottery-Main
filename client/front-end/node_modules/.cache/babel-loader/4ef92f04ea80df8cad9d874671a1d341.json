{"ast":null,"code":"var _jsxFileName = \"/home/empiric-18/Desktop/Blockchain Lottery/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isTron, setIsTron] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] = useState(null);\n  const [blockchainLotteryContract, setBlockchainLotteryContract] = useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null); // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n\n  const USDTAbi = usdtabi.abi; // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n\n  const tronWebConnect = async () => {\n    if (window.tronWeb) {\n      setAccounts([window.tronWeb.defaultAddress.base58]);\n      let _BlockchainLotteryAddress = \"TW7ocicVeZbCLq1WA5ijrwvk2PUvU2MLsD\";\n      setBlockchainLotteryAddress(_BlockchainLotteryAddress);\n      const tempBlockchainLotteryContract = await window.tronWeb.contract(blockchainlottery.abi).at(_BlockchainLotteryAddress);\n      console.log(tempBlockchainLotteryContract);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      setAmount((await tempBlockchainLotteryContract.amount().call()).toNumber());\n      setIsTron(true);\n\n      let _tempUsdtAddress = await tempBlockchainLotteryContract.USDTAddress().call();\n\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress);\n      const tempUSDTContract = await window.tronWeb.contract(usdtabi.abi).at(tempUsdtAddress);\n      setUsdtContract(tempUSDTContract);\n      let tempdecimals = await tempUSDTContract.decimals().call(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol().call();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress).call();\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(window.tronWeb.defaultAddress.base58).call();\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner().call();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn().call();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants().call();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(window.tronWeb.defaultAddress.base58).call();\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets().call();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(window.tronWeb.defaultAddress.hex) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      let _BlockchainLotteryAddress;\n\n      let chainId = await window.ethereum.request({\n        method: \"net_version\"\n      });\n      console.log(chainId); //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n\n      if (chainId == 80001) {\n        _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n        setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n        setNetworkErr(null); // eslint-disable-next-line\n      } else if (chainId == 97) {\n        _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n        setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n        setNetworkErr(null);\n      } else {\n        setNetworkErr(\"Change network to Polygon or BNB\");\n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      setAccounts(_accounts);\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n      const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n      setUsdtContract(tempUSDTContract);\n      let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n\n      console.log(window.location);\n    } else {\n      let details = navigator.userAgent;\n      let regexp = /android|iphone|kindle|ipad/i;\n      let isMobileDevice = regexp.test(details);\n\n      if (isMobileDevice) {\n        // window.location.href = \"metamask://dapp/opensea.io\";\n        // window.location.href = \"https://metamask.app.link/dapp/opensea.io\";\n        window.location.href = \"dapp://diablo.bet\"; // window.location.href = \"dapp://\"+window.location.host;\n      } else {\n        setNetworkErr(\"Please install Metamask\");\n      }\n    }\n\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      console.log(accounts);\n      connectWallet();\n    });\n    window.ethereum.on(\"chainChanged\", function (accounts) {\n      console.log(accounts);\n      connectWallet();\n    });\n  };\n\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\",\n        // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\",\n        // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\" // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n\n      } // bridge: 'https://bridge.walletconnect.org',\n\n    });\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const {\n      chainId\n    } = tempProvider.getNetwork();\n    console.log(\"chain id from Wallet Connect\" + chainId);\n\n    let _BlockchainLotteryAddress; // eslint-disable-next-line\n\n\n    if (chainId == 80001) {\n      // Polygon\n      _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n      setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n      setNetworkErr(null); // eslint-disable-next-line\n    } else if (chainId == 97) {\n      // BNB\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null); // eslint-disable-next-line\n    } else if (chainId == 43113) {\n      // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\");\n    }\n\n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n    const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n    let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    console.log(tempBlockchainLotteryContract);\n\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n\n    console.log(_isOn);\n    setIsOn(_isOn);\n\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n      console.log(_participants);\n\n      let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets); // eslint-disable-next-line\n\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    } // Subscribe to accounts change\n\n\n    provider.on(\"accountsChanged\", accounts => {\n      walletConnect();\n    }); // Subscribe to chainId change\n\n    provider.on(\"chainChanged\", chainId => {\n      walletConnect();\n    });\n  };\n\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected);\n    console.log(\"connect executed\"); // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress);\n\n    if (isTron) {\n      usdtContract.approve(BlockchainLotteryAddress, amount).send();\n    } else {\n      const tx = await usdtContract.approve(BlockchainLotteryAddress, amount);\n      await tx.wait();\n      alert(\"TOKENS APPROVED\");\n    }\n  };\n\n  const depositeUSDT = async () => {\n    if (isTron) {\n      blockchainLotteryContract.depositeUSDT(amount).send();\n    } else {\n      // eslint-disable-next-line\n      const tx = await blockchainLotteryContract.depositeUSDT(amount);\n      await tx.wait();\n      alert(\"TOKENS DEPOSITED\");\n    }\n  };\n\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      connectWallet: connectWallet,\n      walletConnect: walletConnect,\n      tronWebConnect: tronWebConnect,\n      accounts: accounts,\n      usdtBalance: usdtBalance,\n      symbol: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      approve: approve,\n      depositeUSDT: depositeUSDT,\n      pricePool: pricePool,\n      ticketNumber: ticketNumber,\n      lastWinner: lastWinner,\n      getLottery: getLottery,\n      symbol: symbol,\n      isOn: isOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), networkErr ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: \"red\"\n      },\n      children: networkErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LymQ78TJ67TeLSqF0EgkveJK3/I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","usdtabi","blockchainlottery","Navbar","Main","App","isTron","setIsTron","accounts","setAccounts","ticketNumber","setTicketNumber","pricePool","setPricePool","usdtBalance","setUsdtBalance","lastWinner","setLastWinner","isOn","setIsOn","usdtContract","setUsdtContract","BlockchainLotteryAddress","setBlockchainLotteryAddress","blockchainLotteryContract","setBlockchainLotteryContract","networkErr","setNetworkErr","amount","setAmount","symbol","setSymbol","USDTAbi","abi","BlockchainLotteryAbi","tronWebConnect","window","tronWeb","defaultAddress","base58","_BlockchainLotteryAddress","tempBlockchainLotteryContract","contract","at","console","log","call","toNumber","_tempUsdtAddress","USDTAddress","tempUsdtAddress","address","fromHex","tempUSDTContract","tempdecimals","decimals","tempSymbol","tempPricePool","balanceOf","tempUSDTBalance","_lastWinner","_isOn","_participants","getAllParticipants","_participantsTicket","addressAndTickets","alltickets","getAllTickets","indexOf","hex","i","length","connectWallet","ethereum","chainId","request","method","_accounts","tempProvider","providers","Web3Provider","tempSigner","getSigner","Contract","tempAmount","getAddress","location","details","navigator","userAgent","regexp","isMobileDevice","test","href","on","walletConnect","WalletConnectProvider","provider","default","rpc","connected","enable","getNetwork","approve","send","tx","wait","alert","depositeUSDT","getLottery","textAlign","color"],"sources":["/home/empiric-18/Desktop/Blockchain Lottery/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nfunction App() {\n  const [isTron, setIsTron] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] =\n    useState(null);\n  const [blockchainLotteryContract, setBlockchainLotteryContract] =\n    useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n\n  // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n  const USDTAbi = usdtabi.abi;\n\n  // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n  const tronWebConnect = async () => {\n    if (window.tronWeb) {\n      setAccounts([window.tronWeb.defaultAddress.base58]);\n      let _BlockchainLotteryAddress = \"TW7ocicVeZbCLq1WA5ijrwvk2PUvU2MLsD\";\n      setBlockchainLotteryAddress(_BlockchainLotteryAddress);\n      const tempBlockchainLotteryContract = await window.tronWeb\n        .contract(blockchainlottery.abi)\n        .at(_BlockchainLotteryAddress);\n      console.log(tempBlockchainLotteryContract);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      setAmount(\n        (await tempBlockchainLotteryContract.amount().call()).toNumber()\n      );\n      setIsTron(true);\n      let _tempUsdtAddress = await tempBlockchainLotteryContract\n        .USDTAddress()\n        .call();\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress);\n      const tempUSDTContract = await window.tronWeb\n        .contract(usdtabi.abi)\n        .at(tempUsdtAddress);\n      setUsdtContract(tempUSDTContract);\n\n      let tempdecimals = await tempUSDTContract.decimals().call();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol().call();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      ).call();\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        window.tronWeb.defaultAddress.base58\n      ).call();\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner().call();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn().call();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants().call();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            window.tronWeb.defaultAddress.base58\n          ).call();\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets().call();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(window.tronWeb.defaultAddress.hex) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      let _BlockchainLotteryAddress;\n      let chainId = await window.ethereum.request({ method: \"net_version\" });\n      console.log(chainId);\n      //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n      if (chainId == 80001) {\n        _BlockchainLotteryAddress =\n          \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n        setBlockchainLotteryAddress(\n          \"0xC330332351858518Ff61C7d4930780B0d260EDEe\"\n        );\n        setNetworkErr(null);\n        // eslint-disable-next-line\n      } else if (chainId == 97) {\n        _BlockchainLotteryAddress =\n          \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n        setBlockchainLotteryAddress(\n          \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n        );\n        setNetworkErr(null);\n      } else {\n        setNetworkErr(\"Change network to Polygon or BNB\");\n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAccounts(_accounts);\n\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(\n        _BlockchainLotteryAddress,\n        BlockchainLotteryAbi,\n        tempSigner\n      );\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n      // setUsdtAddress(USDTAddress)\n      const tempUSDTContract = new ethers.Contract(\n        USDTAddress,\n        USDTAbi,\n        tempSigner\n      );\n      setUsdtContract(tempUSDTContract);\n\n      let tempdecimals = await tempUSDTContract.decimals();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      );\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        tempSigner.getAddress()\n      );\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            await tempSigner.getAddress()\n          );\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n      console.log(window.location)\n    } else {\n      let details = navigator.userAgent\n      let regexp = /android|iphone|kindle|ipad/i;\n      let isMobileDevice = regexp.test(details);\n      if (isMobileDevice) {\n        // window.location.href = \"metamask://dapp/opensea.io\";\n        // window.location.href = \"https://metamask.app.link/dapp/opensea.io\";\n        window.location.href = \"dapp://diablo.bet\";\n        // window.location.href = \"dapp://\"+window.location.host;\n\n\n         \n      } else {\n        setNetworkErr(\"Please install Metamask\");\n      }\n    }\n\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      console.log(accounts);\n      connectWallet();\n    });\n\n    window.ethereum.on(\"chainChanged\", function (accounts) {\n      console.log(accounts);\n      connectWallet();\n    });\n  };\n\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\", // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\", // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\",\n        // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n      },\n      // bridge: 'https://bridge.walletconnect.org',\n    });\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const { chainId } = tempProvider.getNetwork();\n    console.log(\"chain id from Wallet Connect\" + chainId);\n    let _BlockchainLotteryAddress;\n    // eslint-disable-next-line\n    if (chainId == 80001) {\n      // Polygon\n      _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n      setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n      setNetworkErr(null);\n      // eslint-disable-next-line\n    } else if (chainId == 97) {\n      // BNB\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n      // eslint-disable-next-line\n    } else if (chainId == 43113) {\n      // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\");\n    }\n\n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(\n      _BlockchainLotteryAddress,\n      BlockchainLotteryAbi,\n      tempSigner\n    );\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n    // setUsdtAddress(USDTAddress)\n    const tempUSDTContract = new ethers.Contract(\n      USDTAddress,\n      USDTAbi,\n      tempSigner\n    );\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals();\n    // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n\n    let tempPricePool = await tempUSDTContract.balanceOf(\n      _BlockchainLotteryAddress\n    );\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(\n      tempSigner.getAddress()\n    );\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n    console.log(tempBlockchainLotteryContract);\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n    console.log(_isOn);\n    setIsOn(_isOn);\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants =\n        await tempBlockchainLotteryContract.getAllParticipants();\n      console.log(_participants);\n\n      let _participantsTicket =\n        await tempBlockchainLotteryContract.addressAndTickets(\n          await tempSigner.getAddress()\n        );\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets);\n\n      // eslint-disable-next-line\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    }\n\n    // Subscribe to accounts change\n    provider.on(\"accountsChanged\", (accounts) => {\n      walletConnect();\n    });\n\n    // Subscribe to chainId change\n    provider.on(\"chainChanged\", (chainId) => {\n      walletConnect();\n    });\n  };\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected);\n    console.log(\"connect executed\");\n    // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress);\n    if (isTron) {\n      usdtContract.approve(BlockchainLotteryAddress, amount).send();\n    } else {\n      const tx = await usdtContract.approve(BlockchainLotteryAddress, amount);\n      await tx.wait()\n      alert(\"TOKENS APPROVED\")\n    }\n  };\n  const depositeUSDT = async () => {\n    if (isTron) {\n      blockchainLotteryContract.depositeUSDT(amount).send();\n    } else {\n      // eslint-disable-next-line\n      const tx = await blockchainLotteryContract.depositeUSDT(amount);\n      await tx.wait()\n      alert(\"TOKENS DEPOSITED\")\n    }\n  };\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        connectWallet={connectWallet}\n        walletConnect={walletConnect}\n        tronWebConnect={tronWebConnect}\n        accounts={accounts}\n        usdtBalance={usdtBalance}\n        symbol={symbol}\n      />\n      <Main\n        approve={approve}\n        depositeUSDT={depositeUSDT}\n        pricePool={pricePool}\n        ticketNumber={ticketNumber}\n        lastWinner={lastWinner}\n        getLottery={getLottery}\n        symbol={symbol}\n        isOn={isOn}\n      />\n      {networkErr ? (\n        <h1 style={{ textAlign: \"center\", color: \"red\" }}>{networkErr}</h1>\n      ) : null}\n      {/* <h1>Admin</h1>\n      <button onClick={setUsdtAddress}>Update USDT Address</button>\n      <button onClick={setFeeAccount}>set fee account</button>\n      <button onClick={getTime}>Get Time</button>\n      <button onClick={mint}>Mint Tokens</button>\n      <button onClick={getAllParticipants}>Get all participants</button>\n      <button onClick={setTimeDuration}>Set Time Duration</button>\n      <h1>User</h1>\n      <button onClick={connectWallet}>Connect Metamask</button>\n      <button onClick={approve}>Approve Tokens</button>\n      <button onClick={depositeUSDT}>Add money to lottery</button>\n      <button onClick={getLottery}>Get Lottery</button> \n      \n      #Lottery Contract Address (Mumbai Matic) \n      0xBDf8E38F99E60a839db7bf8CB779ECE832605bf2\n        \n      # Test Tether (Mumbai Matic)\n      0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\n        \n      \n      */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}