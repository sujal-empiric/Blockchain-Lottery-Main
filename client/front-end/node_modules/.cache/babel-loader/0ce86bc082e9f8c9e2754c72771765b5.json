{"ast":null,"code":"var _jsxFileName = \"/home/empiric-18/Desktop/Blockchain Lottery/Blockchain Lottery/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Lending from \"./Lending\";\nimport BuyButtons from \"./BuyButtons\";\nimport About from \"./About\";\nimport Footer from \"./Footer\";\nimport Errors from \"./Errors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isTron, setIsTron] = useState(null);\n  const [walletType, setWalletType] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] = useState(null);\n  const [blockchainLotteryContract, setBlockchainLotteryContract] = useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n  const [txStatus, setTxStatus] = useState(null); // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n\n  const USDTAbi = usdtabi.abi; // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n\n  const tronWebConnect = async () => {\n    if (window.tronWeb) {\n      setWalletType(\"TRON\");\n      console.log(\"new\" + window.tronWeb.defaultAddress.base58);\n      if (w) setAccounts([window.tronWeb.defaultAddress.base58]);\n      let _BlockchainLotteryAddress = \"TUWmgMu4PWCCiLDFQ6gmAFVRBjZQywKfrD\";\n      setBlockchainLotteryAddress(_BlockchainLotteryAddress);\n      const tempBlockchainLotteryContract = await window.tronWeb.contract(blockchainlottery.abi).at(_BlockchainLotteryAddress);\n      console.log(tempBlockchainLotteryContract);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      setAmount((await tempBlockchainLotteryContract.amount().call()).toNumber());\n      setIsTron(true);\n\n      let _tempUsdtAddress = await tempBlockchainLotteryContract.USDTAddress().call();\n\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress);\n      const tempUSDTContract = await window.tronWeb.contract(usdtabi.abi).at(tempUsdtAddress);\n      setUsdtContract(tempUSDTContract);\n      let tempdecimals = await tempUSDTContract.decimals().call(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol().call();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress).call();\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(window.tronWeb.defaultAddress.base58).call();\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner().call();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn().call();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants().call();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(window.tronWeb.defaultAddress.base58).call();\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets().call();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(window.tronWeb.defaultAddress.hex) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      setWalletType(\"METAMASK\");\n\n      let _BlockchainLotteryAddress;\n\n      let chainId = await window.ethereum.request({\n        method: \"net_version\"\n      });\n      console.log(chainId); //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n\n      if (chainId == 137) {\n        _BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n        setBlockchainLotteryAddress(\"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\");\n        setNetworkErr(null);\n        console.log(\"chain id is set\"); // eslint-disable-next-line\n      } else if (chainId == 56) {\n        console.log(\"Chain ID to BNB\");\n        _BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n        setBlockchainLotteryAddress(\"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\");\n        setNetworkErr(null);\n      } else {\n        setNetworkErr(\"Change network to Polygon or Binance Smart Chain\");\n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      setAccounts(_accounts);\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n      const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n      setUsdtContract(tempUSDTContract);\n      let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    } else {\n      let details = navigator.userAgent;\n      let regexp = /android|iphone|kindle|ipad/i;\n      let isMobileDevice = regexp.test(details);\n\n      if (isMobileDevice) {\n        // window.location.href = \"metamask://dapp/opensea.io\";\n        // window.location.href = \"https://metamask.app.link/dapp/opensea.io\";\n        window.location.href = \"dapp://diablo.bet\"; // window.location.href = \"dapp://\"+window.location.host;\n      } else {\n        setNetworkErr(\"Please install Metamask\");\n      }\n    }\n  };\n\n  window.ethereum.on(\"accountsChanged\", function (accounts) {\n    console.log(accounts);\n    connectWallet();\n  });\n  window.ethereum.on(\"chainChanged\", function (accounts) {\n    console.log(accounts);\n    connectWallet();\n  });\n\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\",\n        // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\",\n        // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\",\n        // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n        56: \"https://bsc-dataseed.binance.org/\"\n      } // bridge: 'https://bridge.walletconnect.org',\n\n    });\n    setWalletType(\"WALLETCONNECT\");\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const {\n      chainId\n    } = tempProvider.getNetwork();\n    console.log(\"chain id from Wallet Connect\" + chainId);\n\n    let _BlockchainLotteryAddress; // eslint-disable-next-line\n\n\n    if (chainId == 137) {\n      // Polygon\n      _BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n      setBlockchainLotteryAddress(\"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\");\n      setNetworkErr(null); // eslint-disable-next-line\n    } else if (chainId == 56) {\n      // BNB\n      _BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n      setBlockchainLotteryAddress(\"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\");\n      setNetworkErr(null); // eslint-disable-next-line\n    } else if (chainId == 43113) {\n      // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\");\n    }\n\n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n    const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n    let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    console.log(tempBlockchainLotteryContract);\n\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n\n    console.log(_isOn);\n    setIsOn(_isOn);\n\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n      console.log(_participants);\n\n      let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets); // eslint-disable-next-line\n\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    } // Subscribe to accounts change\n\n\n    provider.on(\"accountsChanged\", accounts => {\n      walletConnect();\n    }); // Subscribe to chainId change\n\n    provider.on(\"chainChanged\", chainId => {\n      walletConnect();\n    });\n  };\n\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected);\n    console.log(\"connect executed\"); // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress);\n\n    if (isTron) {\n      usdtContract.approve(BlockchainLotteryAddress, amount).send();\n    } else {\n      const tx = await usdtContract.approve(BlockchainLotteryAddress, amount);\n      setTxStatus(\"Waiting For Transaction Confirmation\");\n      await tx.wait();\n      setTxStatus(\"Tokens Are Approved, You can Now Buy the Tickets\");\n    }\n  };\n\n  const depositeUSDT = async () => {\n    if (isTron) {\n      blockchainLotteryContract.depositeUSDT(amount).send();\n    } else {\n      // eslint-disable-next-line\n      const tx = await blockchainLotteryContract.depositeUSDT(amount);\n      setTxStatus(\"Waiting for the Transaction Confirmation\");\n      await tx.wait();\n      setTxStatus(\"You Successfully Bought the Ticket\");\n\n      if (walletType === \"METAMASK\") {\n        connectWallet();\n      } else if (walletType === \"WALLETCONNECT\") {\n        walletConnect();\n      }\n    }\n  };\n\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      connectWallet: connectWallet,\n      walletConnect: walletConnect,\n      tronWebConnect: tronWebConnect,\n      accounts: accounts,\n      usdtBalance: usdtBalance,\n      symbol: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), networkErr ? /*#__PURE__*/_jsxDEV(Errors, {\n      error: networkErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Lending, {\n      pricePool: pricePool,\n      ticketNumber: ticketNumber,\n      lastWinner: lastWinner,\n      getLottery: getLottery,\n      symbol: symbol,\n      isOn: isOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), txStatus ? /*#__PURE__*/_jsxDEV(Errors, {\n      error: txStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(BuyButtons, {\n      approve: approve,\n      depositeUSDT: depositeUSDT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G5+/F4+/4WXmCBpeOpE9M+JyYIE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","usdtabi","blockchainlottery","Navbar","Lending","BuyButtons","About","Footer","Errors","App","isTron","setIsTron","walletType","setWalletType","accounts","setAccounts","ticketNumber","setTicketNumber","pricePool","setPricePool","usdtBalance","setUsdtBalance","lastWinner","setLastWinner","isOn","setIsOn","usdtContract","setUsdtContract","BlockchainLotteryAddress","setBlockchainLotteryAddress","blockchainLotteryContract","setBlockchainLotteryContract","networkErr","setNetworkErr","amount","setAmount","symbol","setSymbol","txStatus","setTxStatus","USDTAbi","abi","BlockchainLotteryAbi","tronWebConnect","window","tronWeb","console","log","defaultAddress","base58","w","_BlockchainLotteryAddress","tempBlockchainLotteryContract","contract","at","call","toNumber","_tempUsdtAddress","USDTAddress","tempUsdtAddress","address","fromHex","tempUSDTContract","tempdecimals","decimals","tempSymbol","tempPricePool","balanceOf","tempUSDTBalance","_lastWinner","_isOn","_participants","getAllParticipants","_participantsTicket","addressAndTickets","alltickets","getAllTickets","indexOf","hex","i","length","connectWallet","ethereum","chainId","request","method","_accounts","tempProvider","providers","Web3Provider","tempSigner","getSigner","Contract","tempAmount","getAddress","details","navigator","userAgent","regexp","isMobileDevice","test","location","href","on","walletConnect","WalletConnectProvider","provider","default","rpc","connected","enable","getNetwork","approve","send","tx","wait","depositeUSDT","getLottery"],"sources":["/home/empiric-18/Desktop/Blockchain Lottery/Blockchain Lottery/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Lending from \"./Lending\";\nimport BuyButtons from \"./BuyButtons\";\nimport About from \"./About\";\nimport Footer from \"./Footer\";\nimport Errors from \"./Errors\";\nfunction App() {\n  const [isTron, setIsTron] = useState(null);\n  const [walletType, setWalletType] = useState(null)\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] =\n    useState(null);\n  const [blockchainLotteryContract, setBlockchainLotteryContract] =\n    useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n  const [txStatus, setTxStatus] = useState(null)\n  // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n  const USDTAbi = usdtabi.abi;\n\n  // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n  const tronWebConnect = async () => {\n    if (window.tronWeb) {\n      setWalletType(\"TRON\")\n      console.log(\"new\"+window.tronWeb.defaultAddress.base58)\n      if(w)\n      setAccounts([window.tronWeb.defaultAddress.base58]);\n      let _BlockchainLotteryAddress = \"TUWmgMu4PWCCiLDFQ6gmAFVRBjZQywKfrD\";\n      setBlockchainLotteryAddress(_BlockchainLotteryAddress);\n      const tempBlockchainLotteryContract = await window.tronWeb\n        .contract(blockchainlottery.abi)\n        .at(_BlockchainLotteryAddress);\n      console.log(tempBlockchainLotteryContract);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      setAmount(\n        (await tempBlockchainLotteryContract.amount().call()).toNumber()\n      );\n      setIsTron(true);\n      let _tempUsdtAddress = await tempBlockchainLotteryContract\n        .USDTAddress()\n        .call();\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress);\n      const tempUSDTContract = await window.tronWeb\n        .contract(usdtabi.abi)\n        .at(tempUsdtAddress);\n      setUsdtContract(tempUSDTContract);\n\n      let tempdecimals = await tempUSDTContract.decimals().call();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol().call();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      ).call();\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        window.tronWeb.defaultAddress.base58\n      ).call();\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner().call();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn().call();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants().call();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            window.tronWeb.defaultAddress.base58\n          ).call();\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets().call();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(window.tronWeb.defaultAddress.hex) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      setWalletType(\"METAMASK\")\n      let _BlockchainLotteryAddress;\n      let chainId = await window.ethereum.request({ method: \"net_version\" });\n      console.log(chainId);\n      //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n      if (chainId == 137) {\n        _BlockchainLotteryAddress =\n          \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n        setBlockchainLotteryAddress(\n          \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"\n        );\n        setNetworkErr(null);\n        console.log(\"chain id is set\")\n        // eslint-disable-next-line\n      } else if (chainId == 56) {\n        console.log(\"Chain ID to BNB\")\n        _BlockchainLotteryAddress =\n          \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n        setBlockchainLotteryAddress(\n          \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"\n        );\n        setNetworkErr(null);\n      } else {\n        setNetworkErr(\"Change network to Polygon or Binance Smart Chain\");\n        \n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAccounts(_accounts);\n\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(\n        _BlockchainLotteryAddress,\n        BlockchainLotteryAbi,\n        tempSigner\n      );\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n      // setUsdtAddress(USDTAddress)\n      const tempUSDTContract = new ethers.Contract(\n        USDTAddress,\n        USDTAbi,\n        tempSigner\n      );\n      setUsdtContract(tempUSDTContract);\n\n      let tempdecimals = await tempUSDTContract.decimals();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      );\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        tempSigner.getAddress()\n      );\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            await tempSigner.getAddress()\n          );\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    } else {\n      let details = navigator.userAgent\n      let regexp = /android|iphone|kindle|ipad/i;\n      let isMobileDevice = regexp.test(details);\n      if (isMobileDevice) {\n        // window.location.href = \"metamask://dapp/opensea.io\";\n        // window.location.href = \"https://metamask.app.link/dapp/opensea.io\";\n        window.location.href = \"dapp://diablo.bet\";\n        // window.location.href = \"dapp://\"+window.location.host;\n        \n\n         \n      } else {\n        setNetworkErr(\"Please install Metamask\");\n      }\n      \n    }\n\n  };\n  window.ethereum.on(\"accountsChanged\", function (accounts) {\n    console.log(accounts);\n    connectWallet();\n  });\n\n  window.ethereum.on(\"chainChanged\", function (accounts) {\n    console.log(accounts);\n    connectWallet();\n  });\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\", // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\", // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\",\n        // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n        56:\"https://bsc-dataseed.binance.org/\"\n      },\n      // bridge: 'https://bridge.walletconnect.org',\n    });\n    setWalletType(\"WALLETCONNECT\")\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const { chainId } = tempProvider.getNetwork();\n    console.log(\"chain id from Wallet Connect\" + chainId);\n    let _BlockchainLotteryAddress;\n    // eslint-disable-next-line\n    if (chainId == 137) {\n      // Polygon\n      _BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n      setBlockchainLotteryAddress(\"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\");\n      setNetworkErr(null);\n      // eslint-disable-next-line\n    } else if (chainId == 56) {\n      // BNB\n      _BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\";\n      setBlockchainLotteryAddress(\"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\");\n      setNetworkErr(null);\n      // eslint-disable-next-line\n    } else if (chainId == 43113) {\n      // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n      setNetworkErr(null);\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\");\n    }\n\n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(\n      _BlockchainLotteryAddress,\n      BlockchainLotteryAbi,\n      tempSigner\n    );\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n    // setUsdtAddress(USDTAddress)\n    const tempUSDTContract = new ethers.Contract(\n      USDTAddress,\n      USDTAbi,\n      tempSigner\n    );\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals();\n    // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n\n    let tempPricePool = await tempUSDTContract.balanceOf(\n      _BlockchainLotteryAddress\n    );\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(\n      tempSigner.getAddress()\n    );\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n    console.log(tempBlockchainLotteryContract);\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n    console.log(_isOn);\n    setIsOn(_isOn);\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants =\n        await tempBlockchainLotteryContract.getAllParticipants();\n      console.log(_participants);\n\n      let _participantsTicket =\n        await tempBlockchainLotteryContract.addressAndTickets(\n          await tempSigner.getAddress()\n        );\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets);\n\n      // eslint-disable-next-line\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    }\n\n    // Subscribe to accounts change\n    provider.on(\"accountsChanged\", (accounts) => {\n      walletConnect();\n    });\n\n    // Subscribe to chainId change\n    provider.on(\"chainChanged\", (chainId) => {\n      walletConnect();\n    });\n  };\n\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected);\n    console.log(\"connect executed\");\n    // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress);\n    if (isTron) {\n      usdtContract.approve(BlockchainLotteryAddress, amount).send();\n    } else {\n      const tx = await usdtContract.approve(BlockchainLotteryAddress, amount);\n      setTxStatus(\"Waiting For Transaction Confirmation\")\n      await tx.wait()\n      setTxStatus(\"Tokens Are Approved, You can Now Buy the Tickets\")\n    }\n  };\n  const depositeUSDT = async () => {\n    if (isTron) {\n      blockchainLotteryContract.depositeUSDT(amount).send();\n    } else {\n      // eslint-disable-next-line\n      const tx = await blockchainLotteryContract.depositeUSDT(amount);\n      setTxStatus(\"Waiting for the Transaction Confirmation\")\n      await tx.wait()\n      setTxStatus(\"You Successfully Bought the Ticket\")\n      if(walletType===\"METAMASK\"){\n        connectWallet()\n      }else if(walletType===\"WALLETCONNECT\"){\n        walletConnect()\n      }\n    }\n  };\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        connectWallet={connectWallet}\n        walletConnect={walletConnect}\n        tronWebConnect={tronWebConnect}\n        accounts={accounts}\n        usdtBalance={usdtBalance}\n        symbol={symbol}\n      />\n      {networkErr ? (\n        <Errors error={networkErr}></Errors>\n      ) : null}\n      <Lending\n        pricePool={pricePool}\n        ticketNumber={ticketNumber}\n        lastWinner={lastWinner}\n        getLottery={getLottery}\n        symbol={symbol}\n        isOn={isOn}\n      ></Lending>\n      {txStatus ? (\n        <Errors error={txStatus}></Errors>\n      ) : null}\n      <BuyButtons\n      approve={approve}\n      depositeUSDT={depositeUSDT}\n      ></BuyButtons>\n\n      <About></About>\n      <Footer></Footer>\n      {/* <h1>Admin</h1>\n      <button onClick={setUsdtAddress}>Update USDT Address</button>\n      <button onClick={setFeeAccount}>set fee account</button>\n      <button onClick={getTime}>Get Time</button>\n      <button onClick={mint}>Mint Tokens</button>\n      <button onClick={getAllParticipants}>Get all participants</button>\n      <button onClick={setTimeDuration}>Set Time Duration</button>\n      <h1>User</h1>\n      <button onClick={connectWallet}>Connect Metamask</button>\n      <button onClick={approve}>Approve Tokens</button>\n      <button onClick={depositeUSDT}>Add money to lottery</button>\n      <button onClick={getLottery}>Get Lottery</button> \n      \n      #Lottery Contract Address (Mumbai Matic) \n      0xBDf8E38F99E60a839db7bf8CB779ECE832605bf2\n        \n      # Test Tether (Mumbai Matic)\n      0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\n        \n      \n      */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}