{"ast":null,"code":"var _jsxFileName = \"/home/empiric-18/Desktop/Blockchain Lottery/front-end/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isTron, setIsTron] = useState(null);\n  const [tronWeb, setTronWeb] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] = useState(null);\n  const [blockchainLotteryContract, setBlockchainLotteryContract] = useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null); // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n\n  const USDTAbi = usdtabi.abi; // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n\n  const tronWebConnect = async () => {\n    _s();\n\n    if (window.tronWeb) {\n      setTronWeb(window.tronWeb);\n      let _BlockchainLotteryAddress = \"TW7ocicVeZbCLq1WA5ijrwvk2PUvU2MLsD\";\n      setBlockchainLotteryAddress(_BlockchainLotteryAddress);\n      const tempBlockchainLotteryContract = await window.tronWeb.contract(blockchainlottery.abi).at(_BlockchainLotteryAddress);\n      console.log(tempBlockchainLotteryContract);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      setAmount((await tempBlockchainLotteryContract.amount().call()).toNumber());\n      setIsTron(true);\n\n      let _tempUsdtAddress = await tempBlockchainLotteryContract.USDTAddress().call();\n\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress);\n      const tempUSDTContract = await window.tronWeb.contract(usdtabi.abi).at(tempUsdtAddress);\n      setUsdtContract(tempUSDTContract);\n      let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    }\n\n    const connectWallet = async () => {\n      if (window.ethereum) {\n        let _BlockchainLotteryAddress;\n\n        let chainId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n        console.log(chainId); //matic mainnet chain id = 137\n        //matic testnet chain id = 80001\n        //BNB Mainnet chain id = 56\n        //BNB testnet chain id = 97\n        //rinkeby testnet chain id = 4\n        //eslint-disable-next-line\n\n        if (chainId == 80001) {\n          _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n          setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n          setNetworkErr(null);\n        } else if (chainId == 97) {\n          _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n          setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n          setNetworkErr(null);\n        } else {\n          setNetworkErr(\"Change network to Polygon or BNB\");\n        }\n\n        let _accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        setAccounts(_accounts);\n        const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n        const tempSigner = tempProvider.getSigner();\n        const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n        setBlockchainLotteryContract(tempBlockchainLotteryContract);\n        let tempAmount = await tempBlockchainLotteryContract.amount();\n        setAmount(tempAmount);\n        const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n        const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n        setUsdtContract(tempUSDTContract);\n        let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n        let tempSymbol = await tempUSDTContract.symbol();\n        setSymbol(tempSymbol);\n        let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n        console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n        setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n        let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n        console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n        setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n        console.log(tempBlockchainLotteryContract);\n\n        let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n        setLastWinner(_lastWinner.toNumber());\n\n        let _isOn = await tempBlockchainLotteryContract.isOn();\n\n        console.log(_isOn);\n        setIsOn(_isOn);\n\n        if (_isOn) {\n          setTicketNumber(-1);\n        } else {\n          let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n          console.log(_participants);\n\n          let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n          let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n          console.log(alltickets); // eslint-disable-next-line\n\n          if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n            console.log(\"setting -1 due to no participants\");\n            setTicketNumber(-1);\n          } else {\n            for (var i = 0; i < alltickets.length; i++) {\n              // eslint-disable-next-line\n              if (alltickets[i].toNumber() == _participantsTicket) {\n                console.log(\"setting number\");\n                setTicketNumber(_participantsTicket.toNumber());\n                break;\n              } else {\n                console.log(\"setting -1 \");\n                setTicketNumber(-1);\n              }\n            }\n          }\n        }\n      } else {\n        setNetworkErr(\"Please install Metamask\");\n      }\n\n      window.ethereum.on(\"accountsChanged\", function (accounts) {\n        console.log(accounts);\n        connectWallet();\n      });\n      window.ethereum.on(\"chainChanged\", function (accounts) {\n        console.log(accounts);\n        connectWallet();\n      });\n    };\n\n    const walletConnect = async () => {\n      const WalletConnectProvider = window.WalletConnectProvider;\n      console.log(WalletConnectProvider);\n      var provider = new WalletConnectProvider.default({\n        rpc: {\n          1: \"https://cloudflare-eth.com/\",\n          // https://ethereumnodes.com/\n          137: \"https://polygon-rpc.com/\",\n          // https://docs.polygon.technology/docs/develop/network-details/network/\n          80001: \"https://matic-mumbai.chainstacklabs.com/\" // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n          // ...\n\n        } // bridge: 'https://bridge.walletconnect.org',\n\n      });\n      console.log(provider.connected);\n      await provider.enable();\n      const tempProvider = new ethers.providers.Web3Provider(provider);\n      const {\n        chainId\n      } = tempProvider.getNetwork();\n      console.log(\"chain id from Wallet Connect\" + chainId);\n\n      let _BlockchainLotteryAddress;\n\n      if (chainId == 80001) {\n        // Polygon\n        _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n        setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\");\n        setNetworkErr(null);\n      } else if (chainId == 97) {\n        // BNB\n        _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n        setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n        setNetworkErr(null);\n      } else if (chainId == 43113) {\n        // avalanche\n        _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\";\n        setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\");\n        setNetworkErr(null);\n      } else {\n        setNetworkErr(\"Change network to Polygon or BNB\");\n      }\n\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(_BlockchainLotteryAddress, BlockchainLotteryAbi, tempSigner);\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress(); // setUsdtAddress(USDTAddress)\n\n      const tempUSDTContract = new ethers.Contract(USDTAddress, USDTAbi, tempSigner);\n      setUsdtContract(tempUSDTContract);\n      setAccounts([await tempSigner.getAddress()]);\n      let tempdecimals = await tempUSDTContract.decimals(); // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n      let tempPricePool = await tempUSDTContract.balanceOf(_BlockchainLotteryAddress);\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(tempSigner.getAddress());\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      console.log(tempBlockchainLotteryContract);\n\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n\n      console.log(_isOn);\n      setIsOn(_isOn);\n\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants = await tempBlockchainLotteryContract.getAllParticipants();\n\n        console.log(_participants);\n\n        let _participantsTicket = await tempBlockchainLotteryContract.addressAndTickets(await tempSigner.getAddress());\n\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets); // eslint-disable-next-line\n\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      } // Subscribe to accounts change\n\n\n      provider.on(\"accountsChanged\", accounts => {\n        walletConnect();\n      }); // Subscribe to chainId change\n\n      provider.on(\"chainChanged\", chainId => {\n        walletConnect();\n      });\n    };\n\n    useEffect(() => {\n      // connectWallet();\n      // if(!window.WalletConnectProvider.connected){\n      //   walletConnect()\n      // }else{\n      //   connectWallet()\n      // }\n      console.log(window.WalletConnectProvider.connected);\n      console.log(\"connect executed\"); // console.log(ticketNumber);\n      // eslint-disable-next-line\n    }, []);\n\n    const approve = async () => {\n      console.log(BlockchainLotteryAddress);\n\n      if (isTron) {\n        usdtContract.approve(BlockchainLotteryAddress, amount).send();\n      } else {\n        usdtContract.approve(BlockchainLotteryAddress, amount);\n      }\n    };\n\n    const depositeUSDT = async () => {\n      if (isTron) {\n        blockchainLotteryContract.depositeUSDT(amount).send();\n      } else {\n        blockchainLotteryContract.depositeUSDT(amount);\n      }\n    };\n\n    const getLottery = async () => {\n      console.log(await blockchainLotteryContract.getLottery());\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        connectWallet: connectWallet,\n        walletConnect: walletConnect,\n        accounts: accounts,\n        usdtBalance: usdtBalance,\n        symbol: symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: tronWebConnect,\n        children: \"Connect tronWeb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        approve: approve,\n        depositeUSDT: depositeUSDT,\n        pricePool: pricePool,\n        ticketNumber: ticketNumber,\n        lastWinner: lastWinner,\n        getLottery: getLottery,\n        symbol: symbol,\n        isOn: isOn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 7\n      }, this), networkErr ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"red\"\n        },\n        children: networkErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(tronWebConnect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n\n_s2(App, \"Ubcj9TVi1gIhMctnwYXp56+guGs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","usdtabi","blockchainlottery","Navbar","Main","App","isTron","setIsTron","tronWeb","setTronWeb","accounts","setAccounts","ticketNumber","setTicketNumber","pricePool","setPricePool","usdtBalance","setUsdtBalance","lastWinner","setLastWinner","isOn","setIsOn","usdtContract","setUsdtContract","BlockchainLotteryAddress","setBlockchainLotteryAddress","blockchainLotteryContract","setBlockchainLotteryContract","networkErr","setNetworkErr","amount","setAmount","symbol","setSymbol","USDTAbi","abi","BlockchainLotteryAbi","tronWebConnect","window","_BlockchainLotteryAddress","tempBlockchainLotteryContract","contract","at","console","log","call","toNumber","_tempUsdtAddress","USDTAddress","tempUsdtAddress","address","fromHex","tempUSDTContract","tempdecimals","decimals","tempSymbol","tempPricePool","balanceOf","tempUSDTBalance","tempSigner","getAddress","_lastWinner","_isOn","_participants","getAllParticipants","_participantsTicket","addressAndTickets","alltickets","getAllTickets","indexOf","i","length","connectWallet","ethereum","chainId","request","method","_accounts","tempProvider","providers","Web3Provider","getSigner","Contract","tempAmount","on","walletConnect","WalletConnectProvider","provider","default","rpc","connected","enable","getNetwork","approve","send","depositeUSDT","getLottery","textAlign","color"],"sources":["/home/empiric-18/Desktop/Blockchain Lottery/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport usdtabi from \"./build/USDT.json\";\nimport blockchainlottery from \"./build/BlockchainLottery.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nfunction App() {\n  const [isTron, setIsTron] = useState(null)\n  const [tronWeb, setTronWeb] = useState(null)\n  const [accounts, setAccounts] = useState(null);\n  const [ticketNumber, setTicketNumber] = useState(-1);\n  const [pricePool, setPricePool] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(null);\n  const [lastWinner, setLastWinner] = useState(null);\n  const [isOn, setIsOn] = useState(null);\n  const [usdtContract, setUsdtContract] = useState(null);\n  const [BlockchainLotteryAddress, setBlockchainLotteryAddress] = useState(null)\n  const [blockchainLotteryContract, setBlockchainLotteryContract] = useState(null);\n  const [networkErr, setNetworkErr] = useState(null);\n  const [amount, setAmount] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n\n  // const [usdtAddress, setUsdtAddress] = useState(null)\n  // const USDTAddress = \"0x7FFB3d637014488b63fb9858E279385685AFc1e2\"; //Polygon Mainnet Address For USDT Tokens\n  // const USDTAddress = \"0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\"; //Polygon Mumbai Address For USDT Tokens\n  const USDTAbi = usdtabi.abi;\n  \n  // const BlockchainLotteryAddress = \"0x903F507A8b2887492aBA0fcEcc654b9981e4Cb58\"; //mumbai\n  // const BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\";\n  // const BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"// bnb testnet\n  const BlockchainLotteryAbi = blockchainlottery.abi;\n  const tronWebConnect = async () => {\n    if(window.tronWeb){\n      setTronWeb(window.tronWeb)\n      let _BlockchainLotteryAddress = \"TW7ocicVeZbCLq1WA5ijrwvk2PUvU2MLsD\"\n      setBlockchainLotteryAddress(_BlockchainLotteryAddress)\n      const tempBlockchainLotteryContract = await window.tronWeb.contract(blockchainlottery.abi).at(_BlockchainLotteryAddress)\n      console.log(tempBlockchainLotteryContract)\n      setBlockchainLotteryContract(tempBlockchainLotteryContract)\n      setAmount((await tempBlockchainLotteryContract.amount().call()).toNumber())\n      setIsTron(true)\n      let _tempUsdtAddress = await tempBlockchainLotteryContract.USDTAddress().call()\n      let tempUsdtAddress = window.tronWeb.address.fromHex(_tempUsdtAddress)\n      const tempUSDTContract = await window.tronWeb.contract(usdtabi.abi).at(tempUsdtAddress)\n      setUsdtContract(tempUSDTContract)\n      let tempdecimals = await tempUSDTContract.decimals();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      );\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        tempSigner.getAddress()\n      );\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            await tempSigner.getAddress()\n          );\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n    }\n  }\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      let _BlockchainLotteryAddress;\n      let chainId = await window.ethereum.request({ method: \"net_version\" });\n      console.log(chainId);\n      //matic mainnet chain id = 137\n      //matic testnet chain id = 80001\n      //BNB Mainnet chain id = 56\n      //BNB testnet chain id = 97\n      //rinkeby testnet chain id = 4\n      //eslint-disable-next-line\n      if (chainId == 80001) {\n        _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\"\n        setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\")\n        setNetworkErr(null)\n      } else if(chainId == 97){\n        _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n        setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\")\n        setNetworkErr(null)\n      }else {\n        setNetworkErr(\"Change network to Polygon or BNB\")\n      }\n\n      let _accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAccounts(_accounts);\n\n      const tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n      const tempSigner = tempProvider.getSigner();\n      const tempBlockchainLotteryContract = new ethers.Contract(\n        _BlockchainLotteryAddress,\n        BlockchainLotteryAbi,\n        tempSigner\n      );\n      setBlockchainLotteryContract(tempBlockchainLotteryContract);\n      let tempAmount = await tempBlockchainLotteryContract.amount();\n      setAmount(tempAmount);\n      const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n      // setUsdtAddress(USDTAddress)\n      const tempUSDTContract = new ethers.Contract(\n        USDTAddress,\n        USDTAbi,\n        tempSigner\n      );\n      setUsdtContract(tempUSDTContract);\n\n      let tempdecimals = await tempUSDTContract.decimals();\n      // let tempdecimals = 6\n\n      let tempSymbol = await tempUSDTContract.symbol();\n      setSymbol(tempSymbol);\n\n      let tempPricePool = await tempUSDTContract.balanceOf(\n        _BlockchainLotteryAddress\n      );\n      console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n      setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n      let tempUSDTBalance = await tempUSDTContract.balanceOf(\n        tempSigner.getAddress()\n      );\n      console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n      setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n      console.log(tempBlockchainLotteryContract);\n      let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n      setLastWinner(_lastWinner.toNumber());\n\n      let _isOn = await tempBlockchainLotteryContract.isOn();\n      console.log(_isOn);\n      setIsOn(_isOn);\n      if (_isOn) {\n        setTicketNumber(-1);\n      } else {\n        let _participants =\n          await tempBlockchainLotteryContract.getAllParticipants();\n        console.log(_participants);\n\n        let _participantsTicket =\n          await tempBlockchainLotteryContract.addressAndTickets(\n            await tempSigner.getAddress()\n          );\n        let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n        console.log(alltickets);\n\n        // eslint-disable-next-line\n        if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n          console.log(\"setting -1 due to no participants\");\n          setTicketNumber(-1);\n        } else {\n          for (var i = 0; i < alltickets.length; i++) {\n            // eslint-disable-next-line\n            if (alltickets[i].toNumber() == _participantsTicket) {\n              console.log(\"setting number\");\n              setTicketNumber(_participantsTicket.toNumber());\n              break;\n            } else {\n              console.log(\"setting -1 \");\n              setTicketNumber(-1);\n            }\n          }\n        }\n      }\n    } else {\n      setNetworkErr(\"Please install Metamask\");\n    }\n\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      console.log(accounts)\n      connectWallet();\n    });\n\n    window.ethereum.on(\"chainChanged\", function (accounts) {\n      console.log(accounts)\n      connectWallet();\n    });\n  };\n\n  const walletConnect = async () => {\n    const WalletConnectProvider = window.WalletConnectProvider;\n    console.log(WalletConnectProvider);\n    var provider = new WalletConnectProvider.default({\n      rpc: {\n        1: \"https://cloudflare-eth.com/\", // https://ethereumnodes.com/\n        137: \"https://polygon-rpc.com/\", // https://docs.polygon.technology/docs/develop/network-details/network/\n        80001: \"https://matic-mumbai.chainstacklabs.com/\",\n        // 80001: \"https://polygon-mumbai.g.alchemy.com/v2/bjMe0YCNyiyfqspS91W1JtoPNzoLh19a\"\n        // ...\n      },\n      // bridge: 'https://bridge.walletconnect.org',\n    });\n    console.log(provider.connected);\n    await provider.enable();\n    const tempProvider = new ethers.providers.Web3Provider(provider);\n    const {chainId} = tempProvider.getNetwork()\n    console.log(\"chain id from Wallet Connect\"+chainId)\n    let _BlockchainLotteryAddress;\n    if (chainId == 80001) { // Polygon\n      _BlockchainLotteryAddress = \"0xC330332351858518Ff61C7d4930780B0d260EDEe\"\n      setBlockchainLotteryAddress(\"0xC330332351858518Ff61C7d4930780B0d260EDEe\")\n      setNetworkErr(null)\n    } else if(chainId == 97){ // BNB\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\")\n      setNetworkErr(null)\n    }else if(chainId == 43113){ // avalanche\n      _BlockchainLotteryAddress = \"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\"\n      setBlockchainLotteryAddress(\"0xA9cEa9cD7DB5BB46B636296B008C913047a75E34\")\n      setNetworkErr(null)\n    } else {\n      setNetworkErr(\"Change network to Polygon or BNB\")\n    }\n\n    \n    const tempSigner = tempProvider.getSigner();\n    const tempBlockchainLotteryContract = new ethers.Contract(\n      _BlockchainLotteryAddress,\n      BlockchainLotteryAbi,\n      tempSigner\n    );\n    setBlockchainLotteryContract(tempBlockchainLotteryContract);\n    let tempAmount = await tempBlockchainLotteryContract.amount();\n    setAmount(tempAmount);\n    const USDTAddress = await tempBlockchainLotteryContract.USDTAddress();\n    // setUsdtAddress(USDTAddress)\n    const tempUSDTContract = new ethers.Contract(\n      USDTAddress,\n      USDTAbi,\n      tempSigner\n    );\n    setUsdtContract(tempUSDTContract);\n    setAccounts([await tempSigner.getAddress()]);\n    let tempdecimals = await tempUSDTContract.decimals();\n    // let tempdecimals = 6\n\n    let tempSymbol = await tempUSDTContract.symbol();\n    setSymbol(tempSymbol);\n\n    let tempPricePool = await tempUSDTContract.balanceOf(\n      _BlockchainLotteryAddress\n    );\n    console.log(tempPricePool.toNumber() / 10 ** tempdecimals);\n    setPricePool(tempPricePool.toNumber() / 10 ** tempdecimals);\n\n    let tempUSDTBalance = await tempUSDTContract.balanceOf(\n      tempSigner.getAddress()\n    );\n    console.log(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n    setUsdtBalance(tempUSDTBalance.toNumber() / 10 ** tempdecimals);\n\n    console.log(tempBlockchainLotteryContract);\n    let _lastWinner = await tempBlockchainLotteryContract.lastWinner();\n    setLastWinner(_lastWinner.toNumber());\n\n    let _isOn = await tempBlockchainLotteryContract.isOn();\n    console.log(_isOn);\n    setIsOn(_isOn);\n    if (_isOn) {\n      setTicketNumber(-1);\n    } else {\n      let _participants =\n        await tempBlockchainLotteryContract.getAllParticipants();\n      console.log(_participants);\n\n      let _participantsTicket =\n        await tempBlockchainLotteryContract.addressAndTickets(\n          await tempSigner.getAddress()\n        );\n      let alltickets = await tempBlockchainLotteryContract.getAllTickets();\n      console.log(alltickets);\n\n      // eslint-disable-next-line\n      if (_participants.indexOf(await tempSigner.getAddress()) == -1) {\n        console.log(\"setting -1 due to no participants\");\n        setTicketNumber(-1);\n      } else {\n        for (var i = 0; i < alltickets.length; i++) {\n          // eslint-disable-next-line\n          if (alltickets[i].toNumber() == _participantsTicket) {\n            console.log(\"setting number\");\n            setTicketNumber(_participantsTicket.toNumber());\n            break;\n          } else {\n            console.log(\"setting -1 \");\n            setTicketNumber(-1);\n          }\n        }\n      }\n    }\n\n    // Subscribe to accounts change\n    provider.on(\"accountsChanged\", (accounts) => {\n      walletConnect()\n    });\n\n    // Subscribe to chainId change\n    provider.on(\"chainChanged\", (chainId) => {\n      walletConnect()\n    });\n  };\n  useEffect(() => {\n    // connectWallet();\n    // if(!window.WalletConnectProvider.connected){\n    //   walletConnect()\n    // }else{\n    //   connectWallet()\n    // }\n    console.log(window.WalletConnectProvider.connected)\n    console.log(\"connect executed\");\n    // console.log(ticketNumber);\n    // eslint-disable-next-line\n  }, []);\n\n  const approve = async () => {\n    console.log(BlockchainLotteryAddress)\n    if(isTron){\n      usdtContract.approve(BlockchainLotteryAddress, amount).send()\n    }else{\n      usdtContract.approve(BlockchainLotteryAddress, amount);\n    }\n  };\n  const depositeUSDT = async () => {\n    if(isTron){\n      blockchainLotteryContract.depositeUSDT(amount).send()\n    }else{\n      blockchainLotteryContract.depositeUSDT(amount);\n    }\n  };\n  const getLottery = async () => {\n    console.log(await blockchainLotteryContract.getLottery());\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        connectWallet={connectWallet}\n        walletConnect={walletConnect}\n        accounts={accounts}\n        usdtBalance={usdtBalance}\n        symbol={symbol}\n      />\n      <button onClick={tronWebConnect}>Connect tronWeb</button>\n      <Main\n        approve={approve}\n        depositeUSDT={depositeUSDT}\n        pricePool={pricePool}\n        ticketNumber={ticketNumber}\n        lastWinner={lastWinner}\n        getLottery={getLottery}\n        symbol={symbol}\n        isOn={isOn}\n      />\n      {networkErr ? (\n        <h1 style={{ textAlign: \"center\", color: \"red\" }}>{networkErr}</h1>\n      ) : null}\n      {/* <h1>Admin</h1>\n      <button onClick={setUsdtAddress}>Update USDT Address</button>\n      <button onClick={setFeeAccount}>set fee account</button>\n      <button onClick={getTime}>Get Time</button>\n      <button onClick={mint}>Mint Tokens</button>\n      <button onClick={getAllParticipants}>Get all participants</button>\n      <button onClick={setTimeDuration}>Set Time Duration</button>\n      <h1>User</h1>\n      <button onClick={connectWallet}>Connect Metamask</button>\n      <button onClick={approve}>Approve Tokens</button>\n      <button onClick={depositeUSDT}>Add money to lottery</button>\n      <button onClick={getLottery}>Get Lottery</button> \n      \n      #Lottery Contract Address (Mumbai Matic) \n      0xBDf8E38F99E60a839db7bf8CB779ECE832605bf2\n        \n      # Test Tether (Mumbai Matic)\n      0xc1ef3d10d02F27Fe16052Aa463DB2C27a7604660\n        \n      \n      */}\n    </div>\n  );\n}}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}